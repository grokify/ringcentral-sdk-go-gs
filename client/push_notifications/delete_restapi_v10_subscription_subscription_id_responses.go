package push_notifications

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteRestapiV10SubscriptionSubscriptionIDReader is a Reader for the DeleteRestapiV10SubscriptionSubscriptionID structure.
type DeleteRestapiV10SubscriptionSubscriptionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRestapiV10SubscriptionSubscriptionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {

	result := NewDeleteRestapiV10SubscriptionSubscriptionIDDefault(response.Code())
	if err := result.readResponse(response, consumer, o.formats); err != nil {
		return nil, err
	}
	if response.Code()/100 == 2 {
		return result, nil
	}
	return nil, result

}

// NewDeleteRestapiV10SubscriptionSubscriptionIDDefault creates a DeleteRestapiV10SubscriptionSubscriptionIDDefault with default headers values
func NewDeleteRestapiV10SubscriptionSubscriptionIDDefault(code int) *DeleteRestapiV10SubscriptionSubscriptionIDDefault {
	return &DeleteRestapiV10SubscriptionSubscriptionIDDefault{
		_statusCode: code,
	}
}

/*DeleteRestapiV10SubscriptionSubscriptionIDDefault handles this case with default header values.

OK
*/
type DeleteRestapiV10SubscriptionSubscriptionIDDefault struct {
	_statusCode int
}

// Code gets the status code for the delete restapi v10 subscription subscription ID default response
func (o *DeleteRestapiV10SubscriptionSubscriptionIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteRestapiV10SubscriptionSubscriptionIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /restapi/v1.0/subscription/{subscriptionId}][%d] DeleteRestapiV10SubscriptionSubscriptionID default ", o._statusCode)
}

func (o *DeleteRestapiV10SubscriptionSubscriptionIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
