package dictionary

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetRestapiV10DictionaryLocationParams creates a new GetRestapiV10DictionaryLocationParams object
// with the default values initialized.
func NewGetRestapiV10DictionaryLocationParams() *GetRestapiV10DictionaryLocationParams {
	var ()
	return &GetRestapiV10DictionaryLocationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRestapiV10DictionaryLocationParamsWithTimeout creates a new GetRestapiV10DictionaryLocationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRestapiV10DictionaryLocationParamsWithTimeout(timeout time.Duration) *GetRestapiV10DictionaryLocationParams {
	var ()
	return &GetRestapiV10DictionaryLocationParams{

		timeout: timeout,
	}
}

// NewGetRestapiV10DictionaryLocationParamsWithContext creates a new GetRestapiV10DictionaryLocationParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRestapiV10DictionaryLocationParamsWithContext(ctx context.Context) *GetRestapiV10DictionaryLocationParams {
	var ()
	return &GetRestapiV10DictionaryLocationParams{

		Context: ctx,
	}
}

// NewGetRestapiV10DictionaryLocationParamsWithHTTPClient creates a new GetRestapiV10DictionaryLocationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRestapiV10DictionaryLocationParamsWithHTTPClient(client *http.Client) *GetRestapiV10DictionaryLocationParams {
	var ()
	return &GetRestapiV10DictionaryLocationParams{
		HTTPClient: client,
	}
}

/*GetRestapiV10DictionaryLocationParams contains all the parameters to send to the API endpoint
for the get restapi v10 dictionary location operation typically these are written to a http.Request
*/
type GetRestapiV10DictionaryLocationParams struct {

	/*OrderBy
	  Sorts results by the specified property. The default value is 'City'

	*/
	OrderBy *string
	/*Page
	  Indicates the page number to retrieve. Only positive number values are allowed. Default value is '1'.

	*/
	Page *int64
	/*PerPage
	  Indicates the page size (number of items). If not specified, the value is '100' by default.

	*/
	PerPage *int64
	/*StateID
	  Internal identifier of a state

	*/
	StateID *string
	/*WithNxx
	  Specifies if nxx codes are returned

	*/
	WithNxx *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) WithTimeout(timeout time.Duration) *GetRestapiV10DictionaryLocationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) WithContext(ctx context.Context) *GetRestapiV10DictionaryLocationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) WithHTTPClient(client *http.Client) *GetRestapiV10DictionaryLocationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrderBy adds the orderBy to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) WithOrderBy(orderBy *string) *GetRestapiV10DictionaryLocationParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) SetOrderBy(orderBy *string) {
	o.OrderBy = orderBy
}

// WithPage adds the page to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) WithPage(page *int64) *GetRestapiV10DictionaryLocationParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) SetPage(page *int64) {
	o.Page = page
}

// WithPerPage adds the perPage to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) WithPerPage(perPage *int64) *GetRestapiV10DictionaryLocationParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) SetPerPage(perPage *int64) {
	o.PerPage = perPage
}

// WithStateID adds the stateID to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) WithStateID(stateID *string) *GetRestapiV10DictionaryLocationParams {
	o.SetStateID(stateID)
	return o
}

// SetStateID adds the stateId to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) SetStateID(stateID *string) {
	o.StateID = stateID
}

// WithWithNxx adds the withNxx to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) WithWithNxx(withNxx *bool) *GetRestapiV10DictionaryLocationParams {
	o.SetWithNxx(withNxx)
	return o
}

// SetWithNxx adds the withNxx to the get restapi v10 dictionary location params
func (o *GetRestapiV10DictionaryLocationParams) SetWithNxx(withNxx *bool) {
	o.WithNxx = withNxx
}

// WriteToRequest writes these params to a swagger request
func (o *GetRestapiV10DictionaryLocationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.OrderBy != nil {

		// query param orderBy
		var qrOrderBy string
		if o.OrderBy != nil {
			qrOrderBy = *o.OrderBy
		}
		qOrderBy := qrOrderBy
		if qOrderBy != "" {
			if err := r.SetQueryParam("orderBy", qOrderBy); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int64
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PerPage != nil {

		// query param perPage
		var qrPerPage int64
		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatInt64(qrPerPage)
		if qPerPage != "" {
			if err := r.SetQueryParam("perPage", qPerPage); err != nil {
				return err
			}
		}

	}

	if o.StateID != nil {

		// query param stateId
		var qrStateID string
		if o.StateID != nil {
			qrStateID = *o.StateID
		}
		qStateID := qrStateID
		if qStateID != "" {
			if err := r.SetQueryParam("stateId", qStateID); err != nil {
				return err
			}
		}

	}

	if o.WithNxx != nil {

		// query param withNxx
		var qrWithNxx bool
		if o.WithNxx != nil {
			qrWithNxx = *o.WithNxx
		}
		qWithNxx := swag.FormatBool(qrWithNxx)
		if qWithNxx != "" {
			if err := r.SetQueryParam("withNxx", qWithNxx); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
