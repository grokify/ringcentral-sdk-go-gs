package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// PostRestapiOauthAuthorizeReader is a Reader for the PostRestapiOauthAuthorize structure.
type PostRestapiOauthAuthorizeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRestapiOauthAuthorizeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {

	result := NewPostRestapiOauthAuthorizeDefault(response.Code())
	if err := result.readResponse(response, consumer, o.formats); err != nil {
		return nil, err
	}
	if response.Code()/100 == 2 {
		return result, nil
	}
	return nil, result

}

// NewPostRestapiOauthAuthorizeDefault creates a PostRestapiOauthAuthorizeDefault with default headers values
func NewPostRestapiOauthAuthorizeDefault(code int) *PostRestapiOauthAuthorizeDefault {
	return &PostRestapiOauthAuthorizeDefault{
		_statusCode: code,
	}
}

/*PostRestapiOauthAuthorizeDefault handles this case with default header values.

OK
*/
type PostRestapiOauthAuthorizeDefault struct {
	_statusCode int

	Payload PostRestapiOauthAuthorizeDefaultBody
}

// Code gets the status code for the post restapi oauth authorize default response
func (o *PostRestapiOauthAuthorizeDefault) Code() int {
	return o._statusCode
}

func (o *PostRestapiOauthAuthorizeDefault) Error() string {
	return fmt.Sprintf("[POST /restapi/oauth/authorize][%d] PostRestapiOauthAuthorize default  %+v", o._statusCode, o.Payload)
}

func (o *PostRestapiOauthAuthorizeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostRestapiOauthAuthorizeBody post restapi oauth authorize body
swagger:model PostRestapiOauthAuthorizeBody
*/
type PostRestapiOauthAuthorizeBody struct {

	// Required. Enter your application key (Production or Sandbox) here
	ClientID string `json:"client_id,omitempty"`

	// Required. This is a callback URI which determines where the response will be sent to. The value of this parameter must exactly match one of the URIs you have provided for your app upon registration. This URI can be HTTP/HTTPS address for web applications or custom scheme URI for mobile or desktop applications.
	RedirectURI string `json:"redirect_uri,omitempty"`

	// Must be set to code
	ResponseType string `json:"response_type,omitempty"`

	// Optional, recommended. An opaque value used by the client to maintain state between the request and callback. The authorization server includes this value when redirecting the user-agent back to the client. The parameter should be used for preventing cross-site request forgery
	State string `json:"state,omitempty"`
}

/*PostRestapiOauthAuthorizeDefaultBody post restapi oauth authorize default body
swagger:model PostRestapiOauthAuthorizeDefaultBody
*/
type PostRestapiOauthAuthorizeDefaultBody struct {

	// The authorization code returned for your application
	// Required: true
	Code *string `json:"code"`

	// The remaining lifetime of the authorization code
	// Required: true
	ExpiresIn *int64 `json:"expires_in"`

	// This parameter will be included in response if it was specified in the client authorization request. The value will be copied from the one received from the client
	// Required: true
	State *string `json:"state"`
}

// Validate validates this post restapi oauth authorize default body
func (o *PostRestapiOauthAuthorizeDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCode(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateExpiresIn(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := o.validateState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostRestapiOauthAuthorizeDefaultBody) validateCode(formats strfmt.Registry) error {

	if err := validate.Required("PostRestapiOauthAuthorize default"+"."+"code", "body", o.Code); err != nil {
		return err
	}

	return nil
}

func (o *PostRestapiOauthAuthorizeDefaultBody) validateExpiresIn(formats strfmt.Registry) error {

	if err := validate.Required("PostRestapiOauthAuthorize default"+"."+"expires_in", "body", o.ExpiresIn); err != nil {
		return err
	}

	return nil
}

func (o *PostRestapiOauthAuthorizeDefaultBody) validateState(formats strfmt.Registry) error {

	if err := validate.Required("PostRestapiOauthAuthorize default"+"."+"state", "body", o.State); err != nil {
		return err
	}

	return nil
}
