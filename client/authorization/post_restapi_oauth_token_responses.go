package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/grokify/go-ringcentral/models"
)

// PostRestapiOauthTokenReader is a Reader for the PostRestapiOauthToken structure.
type PostRestapiOauthTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostRestapiOauthTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {

	result := NewPostRestapiOauthTokenDefault(response.Code())
	if err := result.readResponse(response, consumer, o.formats); err != nil {
		return nil, err
	}
	if response.Code()/100 == 2 {
		return result, nil
	}
	return nil, result

}

// NewPostRestapiOauthTokenDefault creates a PostRestapiOauthTokenDefault with default headers values
func NewPostRestapiOauthTokenDefault(code int) *PostRestapiOauthTokenDefault {
	return &PostRestapiOauthTokenDefault{
		_statusCode: code,
	}
}

/*PostRestapiOauthTokenDefault handles this case with default header values.

OK
*/
type PostRestapiOauthTokenDefault struct {
	_statusCode int

	Payload *models.TokenInfo
}

// Code gets the status code for the post restapi oauth token default response
func (o *PostRestapiOauthTokenDefault) Code() int {
	return o._statusCode
}

func (o *PostRestapiOauthTokenDefault) Error() string {
	return fmt.Sprintf("[POST /restapi/oauth/token][%d] PostRestapiOauthToken default  %+v", o._statusCode, o.Payload)
}

func (o *PostRestapiOauthTokenDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TokenInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PostRestapiOauthTokenBody post restapi oauth token body
swagger:model PostRestapiOauthTokenBody
*/
type PostRestapiOauthTokenBody struct {

	// Optional. Access token lifetime in seconds; the possible values are from 600 sec (10 min) to 3600 sec (1 hour). The default value is 3600 sec. If the value specified exceeds the default one, the default value is set. If the value specified is less than 600 seconds, the minimum value (600 sec) is set
	AccessTokenTTL int64 `json:"access_token_ttl,omitempty"`

	// Optional. Unique identifier of a client application. You can pass it in request according to pattern [a-zA-Z0-9_\-]{1,64}. Otherwise it is auto-generated by server. The value will be returned in response in both cases
	EndpointID string `json:"endpoint_id,omitempty"`

	// Optional. Extension short number. If company number is specified as a username, and extension is not specified, the server will attempt to authenticate client as main company administrator
	Extension string `json:"extension,omitempty"`

	// Must hold password value for Resource Owner Credentials flow. If client application is not authorized by the specified grant_type, response does not contain refresh_token and refresh_token_ttl attributes
	GrantType string `json:"grant_type,omitempty"`

	// User's password
	Password string `json:"password,omitempty"`

	// Optional. Refresh token lifetime in seconds. The default value depends on the client application, but as usual it equals to 7 days. If the value specified exceeds the default one, the default value is applied. If client specifies refresh_token_ttl<=0, refresh token is not returned even if the corresponding grant type is supported
	RefreshTokenTTL int64 `json:"refresh_token_ttl,omitempty"`

	// Optional. List of API permissions to be used with access token (see Application Permissions). Can be omitted when requesting all permissions defined during the application registration phase
	Scope string `json:"scope,omitempty"`

	// Phone number linked to account or extension in account in E.164 format with or without leading "+" sign
	Username string `json:"username,omitempty"`
}
