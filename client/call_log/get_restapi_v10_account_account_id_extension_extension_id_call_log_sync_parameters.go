package call_log

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams creates a new GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams object
// with the default values initialized.
func NewGetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams() *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	var (
		accountIDDefault   = string("~")
		extensionIDDefault = string("~")
	)
	return &GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams{
		AccountID:   accountIDDefault,
		ExtensionID: extensionIDDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParamsWithTimeout creates a new GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParamsWithTimeout(timeout time.Duration) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	var (
		accountIDDefault   = string("~")
		extensionIDDefault = string("~")
	)
	return &GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams{
		AccountID:   accountIDDefault,
		ExtensionID: extensionIDDefault,

		timeout: timeout,
	}
}

// NewGetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParamsWithContext creates a new GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParamsWithContext(ctx context.Context) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	var (
		accountIdDefault   = string("~")
		extensionIdDefault = string("~")
	)
	return &GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams{
		AccountID:   accountIdDefault,
		ExtensionID: extensionIdDefault,

		Context: ctx,
	}
}

// NewGetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParamsWithHTTPClient creates a new GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParamsWithHTTPClient(client *http.Client) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	var (
		accountIdDefault   = string("~")
		extensionIdDefault = string("~")
	)
	return &GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams{
		AccountID:   accountIdDefault,
		ExtensionID: extensionIdDefault,
		HTTPClient:  client,
	}
}

/*GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams contains all the parameters to send to the API endpoint
for the get restapi v10 account account ID extension extension ID call log sync operation typically these are written to a http.Request
*/
type GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams struct {

	/*AccountID
	  Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session

	*/
	AccountID string
	/*DateFrom
	  The start datetime for resulting records in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is the current moment

	*/
	DateFrom *strfmt.DateTime
	/*ExtensionID
	  Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session

	*/
	ExtensionID string
	/*RecordCount
	  For FSync the parameter is mandatory, it limits the number of records to be returned in response. For ISync it specifies with how many records to extend sync Frame to the past, the maximum number of records is 250

	*/
	RecordCount *int64
	/*StatusGroup
	  Type of calls to be returned. The default value is 'All'

	*/
	StatusGroup *string
	/*SyncToken
	  Value of syncToken property of last sync request response

	*/
	SyncToken *string
	/*SyncType
	  Type of synchronization. 'FSync' is a default value

	*/
	SyncType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithTimeout(timeout time.Duration) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithContext(ctx context.Context) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithHTTPClient(client *http.Client) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithAccountID(accountID string) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithDateFrom adds the dateFrom to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithDateFrom(dateFrom *strfmt.DateTime) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetDateFrom(dateFrom)
	return o
}

// SetDateFrom adds the dateFrom to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetDateFrom(dateFrom *strfmt.DateTime) {
	o.DateFrom = dateFrom
}

// WithExtensionID adds the extensionID to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithExtensionID(extensionID string) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetExtensionID(extensionID)
	return o
}

// SetExtensionID adds the extensionId to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetExtensionID(extensionID string) {
	o.ExtensionID = extensionID
}

// WithRecordCount adds the recordCount to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithRecordCount(recordCount *int64) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetRecordCount(recordCount)
	return o
}

// SetRecordCount adds the recordCount to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetRecordCount(recordCount *int64) {
	o.RecordCount = recordCount
}

// WithStatusGroup adds the statusGroup to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithStatusGroup(statusGroup *string) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetStatusGroup(statusGroup)
	return o
}

// SetStatusGroup adds the statusGroup to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetStatusGroup(statusGroup *string) {
	o.StatusGroup = statusGroup
}

// WithSyncToken adds the syncToken to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithSyncToken(syncToken *string) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetSyncToken(syncToken)
	return o
}

// SetSyncToken adds the syncToken to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetSyncToken(syncToken *string) {
	o.SyncToken = syncToken
}

// WithSyncType adds the syncType to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WithSyncType(syncType *string) *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams {
	o.SetSyncType(syncType)
	return o
}

// SetSyncType adds the syncType to the get restapi v10 account account ID extension extension ID call log sync params
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) SetSyncType(syncType *string) {
	o.SyncType = syncType
}

// WriteToRequest writes these params to a swagger request
func (o *GetRestapiV10AccountAccountIDExtensionExtensionIDCallLogSyncParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", o.AccountID); err != nil {
		return err
	}

	if o.DateFrom != nil {

		// query param dateFrom
		var qrDateFrom strfmt.DateTime
		if o.DateFrom != nil {
			qrDateFrom = *o.DateFrom
		}
		qDateFrom := qrDateFrom.String()
		if qDateFrom != "" {
			if err := r.SetQueryParam("dateFrom", qDateFrom); err != nil {
				return err
			}
		}

	}

	// path param extensionId
	if err := r.SetPathParam("extensionId", o.ExtensionID); err != nil {
		return err
	}

	if o.RecordCount != nil {

		// query param recordCount
		var qrRecordCount int64
		if o.RecordCount != nil {
			qrRecordCount = *o.RecordCount
		}
		qRecordCount := swag.FormatInt64(qrRecordCount)
		if qRecordCount != "" {
			if err := r.SetQueryParam("recordCount", qRecordCount); err != nil {
				return err
			}
		}

	}

	if o.StatusGroup != nil {

		// query param statusGroup
		var qrStatusGroup string
		if o.StatusGroup != nil {
			qrStatusGroup = *o.StatusGroup
		}
		qStatusGroup := qrStatusGroup
		if qStatusGroup != "" {
			if err := r.SetQueryParam("statusGroup", qStatusGroup); err != nil {
				return err
			}
		}

	}

	if o.SyncToken != nil {

		// query param syncToken
		var qrSyncToken string
		if o.SyncToken != nil {
			qrSyncToken = *o.SyncToken
		}
		qSyncToken := qrSyncToken
		if qSyncToken != "" {
			if err := r.SetQueryParam("syncToken", qSyncToken); err != nil {
				return err
			}
		}

	}

	if o.SyncType != nil {

		// query param syncType
		var qrSyncType string
		if o.SyncType != nil {
			qrSyncType = *o.SyncType
		}
		qSyncType := qrSyncType
		if qSyncType != "" {
			if err := r.SetQueryParam("syncType", qSyncType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
