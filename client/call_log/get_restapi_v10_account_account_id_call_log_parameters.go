package call_log

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetRestapiV10AccountAccountIDCallLogParams creates a new GetRestapiV10AccountAccountIDCallLogParams object
// with the default values initialized.
func NewGetRestapiV10AccountAccountIDCallLogParams() *GetRestapiV10AccountAccountIDCallLogParams {
	var (
		accountIDDefault = string("~")
	)
	return &GetRestapiV10AccountAccountIDCallLogParams{
		AccountID: accountIDDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRestapiV10AccountAccountIDCallLogParamsWithTimeout creates a new GetRestapiV10AccountAccountIDCallLogParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRestapiV10AccountAccountIDCallLogParamsWithTimeout(timeout time.Duration) *GetRestapiV10AccountAccountIDCallLogParams {
	var (
		accountIDDefault = string("~")
	)
	return &GetRestapiV10AccountAccountIDCallLogParams{
		AccountID: accountIDDefault,

		timeout: timeout,
	}
}

// NewGetRestapiV10AccountAccountIDCallLogParamsWithContext creates a new GetRestapiV10AccountAccountIDCallLogParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRestapiV10AccountAccountIDCallLogParamsWithContext(ctx context.Context) *GetRestapiV10AccountAccountIDCallLogParams {
	var (
		accountIdDefault = string("~")
	)
	return &GetRestapiV10AccountAccountIDCallLogParams{
		AccountID: accountIdDefault,

		Context: ctx,
	}
}

// NewGetRestapiV10AccountAccountIDCallLogParamsWithHTTPClient creates a new GetRestapiV10AccountAccountIDCallLogParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRestapiV10AccountAccountIDCallLogParamsWithHTTPClient(client *http.Client) *GetRestapiV10AccountAccountIDCallLogParams {
	var (
		accountIdDefault = string("~")
	)
	return &GetRestapiV10AccountAccountIDCallLogParams{
		AccountID:  accountIdDefault,
		HTTPClient: client,
	}
}

/*GetRestapiV10AccountAccountIDCallLogParams contains all the parameters to send to the API endpoint
for the get restapi v10 account account ID call log operation typically these are written to a http.Request
*/
type GetRestapiV10AccountAccountIDCallLogParams struct {

	/*AccountID
	  Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session

	*/
	AccountID string
	/*DateFrom
	  The start datetime for resulting records in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is dateTo minus 24 hours

	*/
	DateFrom *strfmt.DateTime
	/*DateTo
	  The end datetime for resulting records in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is current time

	*/
	DateTo *strfmt.DateTime
	/*Direction
	  The direction for the result records. It is allowed to specify more than one direction. If not specified, both inbound and outbound records are returned. Multiple values are accepted

	*/
	Direction *string
	/*ExtensionNumber
	  Extension number of a user. If specified, returns call log for a particular extension only. Cannot be specified together with the phoneNumber filter

	*/
	ExtensionNumber *string
	/*Page
	  Indicates the page number to retrieve. Only positive number values are allowed. The default value is '1'

	*/
	Page *int64
	/*PerPage
	  Indicates the page size (number of items). If not specified, the value is '100' by default.

	*/
	PerPage *int64
	/*PhoneNumber
	  Phone number of a caller/call recipient. If specified, returns all calls (both incoming and outcoming) with the mentioned phone number. Cannot be specified together with the extensionNumber filter

	*/
	PhoneNumber *string
	/*Type
	  Call type of a record. It is allowed to specify more than one type. If not specified, all call types are returned. Multiple values are accepted

	*/
	Type *string
	/*View
	  The default value is 'Simple' for both account and extension call log

	*/
	View *string
	/*WithRecording
	  'True' if only recorded calls have to be returned

	*/
	WithRecording *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithTimeout(timeout time.Duration) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithContext(ctx context.Context) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithHTTPClient(client *http.Client) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithAccountID(accountID string) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithDateFrom adds the dateFrom to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithDateFrom(dateFrom *strfmt.DateTime) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetDateFrom(dateFrom)
	return o
}

// SetDateFrom adds the dateFrom to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetDateFrom(dateFrom *strfmt.DateTime) {
	o.DateFrom = dateFrom
}

// WithDateTo adds the dateTo to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithDateTo(dateTo *strfmt.DateTime) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetDateTo(dateTo)
	return o
}

// SetDateTo adds the dateTo to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetDateTo(dateTo *strfmt.DateTime) {
	o.DateTo = dateTo
}

// WithDirection adds the direction to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithDirection(direction *string) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetDirection(direction)
	return o
}

// SetDirection adds the direction to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetDirection(direction *string) {
	o.Direction = direction
}

// WithExtensionNumber adds the extensionNumber to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithExtensionNumber(extensionNumber *string) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetExtensionNumber(extensionNumber)
	return o
}

// SetExtensionNumber adds the extensionNumber to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetExtensionNumber(extensionNumber *string) {
	o.ExtensionNumber = extensionNumber
}

// WithPage adds the page to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithPage(page *int64) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetPage(page *int64) {
	o.Page = page
}

// WithPerPage adds the perPage to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithPerPage(perPage *int64) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetPerPage(perPage *int64) {
	o.PerPage = perPage
}

// WithPhoneNumber adds the phoneNumber to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithPhoneNumber(phoneNumber *string) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetPhoneNumber(phoneNumber)
	return o
}

// SetPhoneNumber adds the phoneNumber to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetPhoneNumber(phoneNumber *string) {
	o.PhoneNumber = phoneNumber
}

// WithType adds the typeVar to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithType(typeVar *string) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetType(typeVar *string) {
	o.Type = typeVar
}

// WithView adds the view to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithView(view *string) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetView(view)
	return o
}

// SetView adds the view to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetView(view *string) {
	o.View = view
}

// WithWithRecording adds the withRecording to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) WithWithRecording(withRecording *bool) *GetRestapiV10AccountAccountIDCallLogParams {
	o.SetWithRecording(withRecording)
	return o
}

// SetWithRecording adds the withRecording to the get restapi v10 account account ID call log params
func (o *GetRestapiV10AccountAccountIDCallLogParams) SetWithRecording(withRecording *bool) {
	o.WithRecording = withRecording
}

// WriteToRequest writes these params to a swagger request
func (o *GetRestapiV10AccountAccountIDCallLogParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", o.AccountID); err != nil {
		return err
	}

	if o.DateFrom != nil {

		// query param dateFrom
		var qrDateFrom strfmt.DateTime
		if o.DateFrom != nil {
			qrDateFrom = *o.DateFrom
		}
		qDateFrom := qrDateFrom.String()
		if qDateFrom != "" {
			if err := r.SetQueryParam("dateFrom", qDateFrom); err != nil {
				return err
			}
		}

	}

	if o.DateTo != nil {

		// query param dateTo
		var qrDateTo strfmt.DateTime
		if o.DateTo != nil {
			qrDateTo = *o.DateTo
		}
		qDateTo := qrDateTo.String()
		if qDateTo != "" {
			if err := r.SetQueryParam("dateTo", qDateTo); err != nil {
				return err
			}
		}

	}

	if o.Direction != nil {

		// query param direction
		var qrDirection string
		if o.Direction != nil {
			qrDirection = *o.Direction
		}
		qDirection := qrDirection
		if qDirection != "" {
			if err := r.SetQueryParam("direction", qDirection); err != nil {
				return err
			}
		}

	}

	if o.ExtensionNumber != nil {

		// query param extensionNumber
		var qrExtensionNumber string
		if o.ExtensionNumber != nil {
			qrExtensionNumber = *o.ExtensionNumber
		}
		qExtensionNumber := qrExtensionNumber
		if qExtensionNumber != "" {
			if err := r.SetQueryParam("extensionNumber", qExtensionNumber); err != nil {
				return err
			}
		}

	}

	if o.Page != nil {

		// query param page
		var qrPage int64
		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {
			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}

	}

	if o.PerPage != nil {

		// query param perPage
		var qrPerPage int64
		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := swag.FormatInt64(qrPerPage)
		if qPerPage != "" {
			if err := r.SetQueryParam("perPage", qPerPage); err != nil {
				return err
			}
		}

	}

	if o.PhoneNumber != nil {

		// query param phoneNumber
		var qrPhoneNumber string
		if o.PhoneNumber != nil {
			qrPhoneNumber = *o.PhoneNumber
		}
		qPhoneNumber := qrPhoneNumber
		if qPhoneNumber != "" {
			if err := r.SetQueryParam("phoneNumber", qPhoneNumber); err != nil {
				return err
			}
		}

	}

	if o.Type != nil {

		// query param type
		var qrType string
		if o.Type != nil {
			qrType = *o.Type
		}
		qType := qrType
		if qType != "" {
			if err := r.SetQueryParam("type", qType); err != nil {
				return err
			}
		}

	}

	if o.View != nil {

		// query param view
		var qrView string
		if o.View != nil {
			qrView = *o.View
		}
		qView := qrView
		if qView != "" {
			if err := r.SetQueryParam("view", qView); err != nil {
				return err
			}
		}

	}

	if o.WithRecording != nil {

		// query param withRecording
		var qrWithRecording bool
		if o.WithRecording != nil {
			qrWithRecording = *o.WithRecording
		}
		qWithRecording := swag.FormatBool(qrWithRecording)
		if qWithRecording != "" {
			if err := r.SetQueryParam("withRecording", qWithRecording); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
