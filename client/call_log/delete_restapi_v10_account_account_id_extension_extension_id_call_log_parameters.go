package call_log

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams creates a new DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams object
// with the default values initialized.
func NewDeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams() *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	var (
		accountIDDefault   = string("~")
		extensionIDDefault = string("~")
	)
	return &DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams{
		AccountID:   accountIDDefault,
		ExtensionID: extensionIDDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParamsWithTimeout creates a new DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParamsWithTimeout(timeout time.Duration) *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	var (
		accountIDDefault   = string("~")
		extensionIDDefault = string("~")
	)
	return &DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams{
		AccountID:   accountIDDefault,
		ExtensionID: extensionIDDefault,

		timeout: timeout,
	}
}

// NewDeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParamsWithContext creates a new DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParamsWithContext(ctx context.Context) *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	var (
		accountIdDefault   = string("~")
		extensionIdDefault = string("~")
	)
	return &DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams{
		AccountID:   accountIdDefault,
		ExtensionID: extensionIdDefault,

		Context: ctx,
	}
}

// NewDeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParamsWithHTTPClient creates a new DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParamsWithHTTPClient(client *http.Client) *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	var (
		accountIdDefault   = string("~")
		extensionIdDefault = string("~")
	)
	return &DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams{
		AccountID:   accountIdDefault,
		ExtensionID: extensionIdDefault,
		HTTPClient:  client,
	}
}

/*DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams contains all the parameters to send to the API endpoint
for the delete restapi v10 account account ID extension extension ID call log operation typically these are written to a http.Request
*/
type DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams struct {

	/*AccountID
	  Internal identifier of a RingCentral account or tilde (~) to indicate the account logged-in within the current session

	*/
	AccountID string
	/*DateTo
	  The end datetime for records deletion in ISO 8601 format including timezone, for example 2016-03-10T18:07:52.534Z. The default value is current time

	*/
	DateTo *strfmt.DateTime
	/*ExtensionID
	  Internal identifier of an extension or tilde (~) to indicate the extension assigned to the account logged-in within the current session

	*/
	ExtensionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) WithTimeout(timeout time.Duration) *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) WithContext(ctx context.Context) *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) WithHTTPClient(client *http.Client) *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) WithAccountID(accountID string) *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithDateTo adds the dateTo to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) WithDateTo(dateTo *strfmt.DateTime) *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	o.SetDateTo(dateTo)
	return o
}

// SetDateTo adds the dateTo to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) SetDateTo(dateTo *strfmt.DateTime) {
	o.DateTo = dateTo
}

// WithExtensionID adds the extensionID to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) WithExtensionID(extensionID string) *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams {
	o.SetExtensionID(extensionID)
	return o
}

// SetExtensionID adds the extensionId to the delete restapi v10 account account ID extension extension ID call log params
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) SetExtensionID(extensionID string) {
	o.ExtensionID = extensionID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteRestapiV10AccountAccountIDExtensionExtensionIDCallLogParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", o.AccountID); err != nil {
		return err
	}

	if o.DateTo != nil {

		// query param dateTo
		var qrDateTo strfmt.DateTime
		if o.DateTo != nil {
			qrDateTo = *o.DateTo
		}
		qDateTo := qrDateTo.String()
		if qDateTo != "" {
			if err := r.SetQueryParam("dateTo", qDateTo); err != nil {
				return err
			}
		}

	}

	// path param extensionId
	if err := r.SetPathParam("extensionId", o.ExtensionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
