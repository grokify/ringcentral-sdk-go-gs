package meetings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/grokify/go-ringcentral/models"
)

// PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDReader is a Reader for the PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingID structure.
type PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {

	result := NewPutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault(response.Code())
	if err := result.readResponse(response, consumer, o.formats); err != nil {
		return nil, err
	}
	if response.Code()/100 == 2 {
		return result, nil
	}
	return nil, result

}

// NewPutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault creates a PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault with default headers values
func NewPutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault(code int) *PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault {
	return &PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault{
		_statusCode: code,
	}
}

/*PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault handles this case with default header values.

OK
*/
type PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault struct {
	_statusCode int

	Payload *models.MeetingInfo
}

// Code gets the status code for the put restapi v10 account account ID extension extension ID meeting meeting ID default response
func (o *PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault) Code() int {
	return o._statusCode
}

func (o *PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault) Error() string {
	return fmt.Sprintf("[PUT /restapi/v1.0/account/{accountId}/extension/{extensionId}/meeting/{meetingId}][%d] PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingID default  %+v", o._statusCode, o.Payload)
}

func (o *PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MeetingInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDBody put restapi v10 account account ID extension extension ID meeting meeting ID body
swagger:model PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDBody
*/
type PutRestapiV10AccountAccountIDExtensionExtensionIDMeetingMeetingIDBody struct {

	// If 'True' then the meeting can be joined and started by any participant (not host only). Supported for the meetings of 'Scheduled' and 'Recurring' type.
	AllowJoinBeforeHost bool `json:"allowJoinBeforeHost,omitempty"`

	// Meeting audio options. Possible values are 'Phone', 'ComputerAudio'
	AudioOptions []string `json:"audioOptions"`

	// Type of a meeting. 'Instant' - meeting that is instantly started as soon as the host creates it; 'Scheduled' - common scheduled meeting; 'Recurring' - a recurring meeting. If the specified meeting type is 'Scheduled' then schedule property is mandatory for request
	MeetingType string `json:"meetingType,omitempty"`

	// Password required to join a meeting. Max number of characters is 10
	Password string `json:"password,omitempty"`

	// Schedule of a meeting
	Schedule *models.MeetingScheduleInfo `json:"schedule,omitempty"`

	// Enables starting video when host joins the meeting
	StartHostVideo bool `json:"startHostVideo,omitempty"`

	// Enables starting video when participants join the meeting
	StartParticipantsVideo bool `json:"startParticipantsVideo,omitempty"`

	// Topic of a meeting
	Topic string `json:"topic,omitempty"`
}
