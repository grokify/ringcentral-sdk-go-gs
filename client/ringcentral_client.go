package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/grokify/go-ringcentral/client/account"
	"github.com/grokify/go-ringcentral/client/address_book"
	"github.com/grokify/go-ringcentral/client/answering_rules"
	"github.com/grokify/go-ringcentral/client/api_versions"
	"github.com/grokify/go-ringcentral/client/authorization"
	"github.com/grokify/go-ringcentral/client/authorization_profile"
	"github.com/grokify/go-ringcentral/client/blocked_numbers"
	"github.com/grokify/go-ringcentral/client/call_log"
	"github.com/grokify/go-ringcentral/client/client_application"
	"github.com/grokify/go-ringcentral/client/conferencing"
	"github.com/grokify/go-ringcentral/client/devices"
	"github.com/grokify/go-ringcentral/client/dictionary"
	"github.com/grokify/go-ringcentral/client/extension"
	"github.com/grokify/go-ringcentral/client/forwarding_numbers"
	"github.com/grokify/go-ringcentral/client/meetings"
	"github.com/grokify/go-ringcentral/client/messages"
	"github.com/grokify/go-ringcentral/client/ordering"
	"github.com/grokify/go-ringcentral/client/phone_number_parser"
	"github.com/grokify/go-ringcentral/client/phone_number_pool"
	"github.com/grokify/go-ringcentral/client/presence"
	"github.com/grokify/go-ringcentral/client/push_notifications"
	"github.com/grokify/go-ringcentral/client/ring_out"
)

// Default ringcentral HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "platform.devtest.ringcentral.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new ringcentral HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Ringcentral {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new ringcentral HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Ringcentral {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new ringcentral client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Ringcentral {
	cli := new(Ringcentral)
	cli.Transport = transport

	cli.Account = account.New(transport, formats)

	cli.AddressBook = address_book.New(transport, formats)

	cli.AnsweringRules = answering_rules.New(transport, formats)

	cli.APIVersions = api_versions.New(transport, formats)

	cli.Authorization = authorization.New(transport, formats)

	cli.AuthorizationProfile = authorization_profile.New(transport, formats)

	cli.BlockedNumbers = blocked_numbers.New(transport, formats)

	cli.CallLog = call_log.New(transport, formats)

	cli.ClientApplication = client_application.New(transport, formats)

	cli.Conferencing = conferencing.New(transport, formats)

	cli.Devices = devices.New(transport, formats)

	cli.Dictionary = dictionary.New(transport, formats)

	cli.Extension = extension.New(transport, formats)

	cli.ForwardingNumbers = forwarding_numbers.New(transport, formats)

	cli.Meetings = meetings.New(transport, formats)

	cli.Messages = messages.New(transport, formats)

	cli.Ordering = ordering.New(transport, formats)

	cli.PhoneNumberParser = phone_number_parser.New(transport, formats)

	cli.PhoneNumberPool = phone_number_pool.New(transport, formats)

	cli.Presence = presence.New(transport, formats)

	cli.PushNotifications = push_notifications.New(transport, formats)

	cli.RingOut = ring_out.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Ringcentral is a client for ringcentral
type Ringcentral struct {
	Account *account.Client

	AddressBook *address_book.Client

	AnsweringRules *answering_rules.Client

	APIVersions *api_versions.Client

	Authorization *authorization.Client

	AuthorizationProfile *authorization_profile.Client

	BlockedNumbers *blocked_numbers.Client

	CallLog *call_log.Client

	ClientApplication *client_application.Client

	Conferencing *conferencing.Client

	Devices *devices.Client

	Dictionary *dictionary.Client

	Extension *extension.Client

	ForwardingNumbers *forwarding_numbers.Client

	Meetings *meetings.Client

	Messages *messages.Client

	Ordering *ordering.Client

	PhoneNumberParser *phone_number_parser.Client

	PhoneNumberPool *phone_number_pool.Client

	Presence *presence.Client

	PushNotifications *push_notifications.Client

	RingOut *ring_out.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Ringcentral) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Account.SetTransport(transport)

	c.AddressBook.SetTransport(transport)

	c.AnsweringRules.SetTransport(transport)

	c.APIVersions.SetTransport(transport)

	c.Authorization.SetTransport(transport)

	c.AuthorizationProfile.SetTransport(transport)

	c.BlockedNumbers.SetTransport(transport)

	c.CallLog.SetTransport(transport)

	c.ClientApplication.SetTransport(transport)

	c.Conferencing.SetTransport(transport)

	c.Devices.SetTransport(transport)

	c.Dictionary.SetTransport(transport)

	c.Extension.SetTransport(transport)

	c.ForwardingNumbers.SetTransport(transport)

	c.Meetings.SetTransport(transport)

	c.Messages.SetTransport(transport)

	c.Ordering.SetTransport(transport)

	c.PhoneNumberParser.SetTransport(transport)

	c.PhoneNumberPool.SetTransport(transport)

	c.Presence.SetTransport(transport)

	c.PushNotifications.SetTransport(transport)

	c.RingOut.SetTransport(transport)

}
