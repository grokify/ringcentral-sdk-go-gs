package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ForwardingNumberInfo forwarding number info
// swagger:model ForwardingNumberInfo
type ForwardingNumberInfo struct {

	// Type of option this phone number is used for. Multiple values are accepted
	Features string `json:"features,omitempty"`

	// Number assigned to the call flip phone number, corresponds to the shortcut dial number
	FlipNumber int64 `json:"flipNumber,omitempty"`

	// Internal identifier of a forwarding/call flip phone number
	ID string `json:"id,omitempty"`

	// Forwarding/Call flip number title
	Label string `json:"label,omitempty"`

	// Forwarding/Call flip phone number
	PhoneNumber string `json:"phoneNumber,omitempty"`

	// Canonical URI of a forwarding/call flip phone number
	URI string `json:"uri,omitempty"`
}

// Validate validates this forwarding number info
func (m *ForwardingNumberInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFeatures(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var forwardingNumberInfoTypeFeaturesPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CallFlip","CallForwarding"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		forwardingNumberInfoTypeFeaturesPropEnum = append(forwardingNumberInfoTypeFeaturesPropEnum, v)
	}
}

const (
	// ForwardingNumberInfoFeaturesCallFlip captures enum value "CallFlip"
	ForwardingNumberInfoFeaturesCallFlip string = "CallFlip"
	// ForwardingNumberInfoFeaturesCallForwarding captures enum value "CallForwarding"
	ForwardingNumberInfoFeaturesCallForwarding string = "CallForwarding"
)

// prop value enum
func (m *ForwardingNumberInfo) validateFeaturesEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, forwardingNumberInfoTypeFeaturesPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *ForwardingNumberInfo) validateFeatures(formats strfmt.Registry) error {

	if swag.IsZero(m.Features) { // not required
		return nil
	}

	// value enum
	if err := m.validateFeaturesEnum("features", "body", m.Features); err != nil {
		return err
	}

	return nil
}
