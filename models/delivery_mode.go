package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeliveryMode delivery mode
// swagger:model DeliveryMode
type DeliveryMode struct {

	// PubNub channel name. For APNS transport type - internal identifier of a device "device_token"
	Address string `json:"address,omitempty"`

	// Optional parameter. Specifies if the message will be encrypted or not. For APNS transport type the value is always "false"
	Encryption bool `json:"encryption,omitempty"`

	// Encryption algorithm 'AES' (for PubNub transport type only)
	EncryptionAlgorithm string `json:"encryptionAlgorithm,omitempty"`

	// Key for notification message decryption (for PubNub transport type only)
	EncryptionKey string `json:"encryptionKey,omitempty"`

	// PubNub subscriber credentials required to subscribe to the channel. Optional (for PubNub transport type only)
	SecretKey string `json:"secretKey,omitempty"`

	// PubNub subscriber credentials required to subscribe to the channel
	SubscriberKey string `json:"subscriberKey,omitempty"`

	// Notifications transportation provider name. 'APNS' (Apple Push Notifications Service)
	TransportType string `json:"transportType,omitempty"`
}

// Validate validates this delivery mode
func (m *DeliveryMode) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTransportType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var deliveryModeTypeTransportTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PubNub","APNS","PubNub/APNS/VoIP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		deliveryModeTypeTransportTypePropEnum = append(deliveryModeTypeTransportTypePropEnum, v)
	}
}

const (
	// DeliveryModeTransportTypePubNub captures enum value "PubNub"
	DeliveryModeTransportTypePubNub string = "PubNub"
	// DeliveryModeTransportTypeAPNS captures enum value "APNS"
	DeliveryModeTransportTypeAPNS string = "APNS"
	// DeliveryModeTransportTypePubNubAPNSVoIP captures enum value "PubNub/APNS/VoIP"
	DeliveryModeTransportTypePubNubAPNSVoIP string = "PubNub/APNS/VoIP"
)

// prop value enum
func (m *DeliveryMode) validateTransportTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, deliveryModeTypeTransportTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *DeliveryMode) validateTransportType(formats strfmt.Registry) error {

	if swag.IsZero(m.TransportType) { // not required
		return nil
	}

	// value enum
	if err := m.validateTransportTypeEnum("transportType", "body", m.TransportType); err != nil {
		return err
	}

	return nil
}
