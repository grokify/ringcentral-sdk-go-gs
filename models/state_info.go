package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// StateInfo state info
// swagger:model StateInfo
type StateInfo struct {

	// Information on a country the state belongs to
	Country *StateInfoCountryInfo `json:"country,omitempty"`

	// Internal identifier of a state
	ID string `json:"id,omitempty"`

	// Short code for a state (2-letter usually)
	IsoCode string `json:"isoCode,omitempty"`

	// Official name of a state
	Name string `json:"name,omitempty"`

	// Canonical URI of a state
	URI string `json:"uri,omitempty"`
}

// Validate validates this state info
func (m *StateInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCountry(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StateInfo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(m.Country) { // not required
		return nil
	}

	if m.Country != nil {

		if err := m.Country.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("country")
			}
			return err
		}
	}

	return nil
}
