package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PhoneLinesInfo phone lines info
// swagger:model PhoneLinesInfo
type PhoneLinesInfo struct {

	// Type of phone line
	LineType string `json:"lineType,omitempty"`

	// Phone number information
	PhoneInfo *PhoneLinesInfoPhoneNumberInfo `json:"phoneInfo,omitempty"`
}

// Validate validates this phone lines info
func (m *PhoneLinesInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLineType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePhoneInfo(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var phoneLinesInfoTypeLineTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Standalone","StandaloneFree","BlaPrimary","BlaSecondary"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		phoneLinesInfoTypeLineTypePropEnum = append(phoneLinesInfoTypeLineTypePropEnum, v)
	}
}

const (
	// PhoneLinesInfoLineTypeStandalone captures enum value "Standalone"
	PhoneLinesInfoLineTypeStandalone string = "Standalone"
	// PhoneLinesInfoLineTypeStandaloneFree captures enum value "StandaloneFree"
	PhoneLinesInfoLineTypeStandaloneFree string = "StandaloneFree"
	// PhoneLinesInfoLineTypeBlaPrimary captures enum value "BlaPrimary"
	PhoneLinesInfoLineTypeBlaPrimary string = "BlaPrimary"
	// PhoneLinesInfoLineTypeBlaSecondary captures enum value "BlaSecondary"
	PhoneLinesInfoLineTypeBlaSecondary string = "BlaSecondary"
)

// prop value enum
func (m *PhoneLinesInfo) validateLineTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, phoneLinesInfoTypeLineTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PhoneLinesInfo) validateLineType(formats strfmt.Registry) error {

	if swag.IsZero(m.LineType) { // not required
		return nil
	}

	// value enum
	if err := m.validateLineTypeEnum("lineType", "body", m.LineType); err != nil {
		return err
	}

	return nil
}

func (m *PhoneLinesInfo) validatePhoneInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.PhoneInfo) { // not required
		return nil
	}

	if m.PhoneInfo != nil {

		if err := m.PhoneInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("phoneInfo")
			}
			return err
		}
	}

	return nil
}
