package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RingOutStatusInfo ring out status info
// swagger:model RingOutStatusInfo
type RingOutStatusInfo struct {

	// Status of a call
	CallStatus string `json:"callStatus,omitempty"`

	// Status of a called party
	CalleeStatus string `json:"calleeStatus,omitempty"`

	// Status of a calling party
	CallerStatus string `json:"callerStatus,omitempty"`
}

// Validate validates this ring out status info
func (m *RingOutStatusInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCallStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCalleeStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateCallerStatus(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var ringOutStatusInfoTypeCallStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Invalid","Success","InProgress","Busy","NoAnswer","Rejected","GenericError","Finished","InternationalDisabled","DestinationBlocked","NotEnoughFunds","NoSuchUser"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ringOutStatusInfoTypeCallStatusPropEnum = append(ringOutStatusInfoTypeCallStatusPropEnum, v)
	}
}

const (
	// RingOutStatusInfoCallStatusInvalid captures enum value "Invalid"
	RingOutStatusInfoCallStatusInvalid string = "Invalid"
	// RingOutStatusInfoCallStatusSuccess captures enum value "Success"
	RingOutStatusInfoCallStatusSuccess string = "Success"
	// RingOutStatusInfoCallStatusInProgress captures enum value "InProgress"
	RingOutStatusInfoCallStatusInProgress string = "InProgress"
	// RingOutStatusInfoCallStatusBusy captures enum value "Busy"
	RingOutStatusInfoCallStatusBusy string = "Busy"
	// RingOutStatusInfoCallStatusNoAnswer captures enum value "NoAnswer"
	RingOutStatusInfoCallStatusNoAnswer string = "NoAnswer"
	// RingOutStatusInfoCallStatusRejected captures enum value "Rejected"
	RingOutStatusInfoCallStatusRejected string = "Rejected"
	// RingOutStatusInfoCallStatusGenericError captures enum value "GenericError"
	RingOutStatusInfoCallStatusGenericError string = "GenericError"
	// RingOutStatusInfoCallStatusFinished captures enum value "Finished"
	RingOutStatusInfoCallStatusFinished string = "Finished"
	// RingOutStatusInfoCallStatusInternationalDisabled captures enum value "InternationalDisabled"
	RingOutStatusInfoCallStatusInternationalDisabled string = "InternationalDisabled"
	// RingOutStatusInfoCallStatusDestinationBlocked captures enum value "DestinationBlocked"
	RingOutStatusInfoCallStatusDestinationBlocked string = "DestinationBlocked"
	// RingOutStatusInfoCallStatusNotEnoughFunds captures enum value "NotEnoughFunds"
	RingOutStatusInfoCallStatusNotEnoughFunds string = "NotEnoughFunds"
	// RingOutStatusInfoCallStatusNoSuchUser captures enum value "NoSuchUser"
	RingOutStatusInfoCallStatusNoSuchUser string = "NoSuchUser"
)

// prop value enum
func (m *RingOutStatusInfo) validateCallStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, ringOutStatusInfoTypeCallStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *RingOutStatusInfo) validateCallStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.CallStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateCallStatusEnum("callStatus", "body", m.CallStatus); err != nil {
		return err
	}

	return nil
}

var ringOutStatusInfoTypeCalleeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Invalid","Success","InProgress","Busy","NoAnswer","Rejected","GenericError","Finished","InternationalDisabled","DestinationBlocked","NotEnoughFunds","NoSuchUser"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ringOutStatusInfoTypeCalleeStatusPropEnum = append(ringOutStatusInfoTypeCalleeStatusPropEnum, v)
	}
}

const (
	// RingOutStatusInfoCalleeStatusInvalid captures enum value "Invalid"
	RingOutStatusInfoCalleeStatusInvalid string = "Invalid"
	// RingOutStatusInfoCalleeStatusSuccess captures enum value "Success"
	RingOutStatusInfoCalleeStatusSuccess string = "Success"
	// RingOutStatusInfoCalleeStatusInProgress captures enum value "InProgress"
	RingOutStatusInfoCalleeStatusInProgress string = "InProgress"
	// RingOutStatusInfoCalleeStatusBusy captures enum value "Busy"
	RingOutStatusInfoCalleeStatusBusy string = "Busy"
	// RingOutStatusInfoCalleeStatusNoAnswer captures enum value "NoAnswer"
	RingOutStatusInfoCalleeStatusNoAnswer string = "NoAnswer"
	// RingOutStatusInfoCalleeStatusRejected captures enum value "Rejected"
	RingOutStatusInfoCalleeStatusRejected string = "Rejected"
	// RingOutStatusInfoCalleeStatusGenericError captures enum value "GenericError"
	RingOutStatusInfoCalleeStatusGenericError string = "GenericError"
	// RingOutStatusInfoCalleeStatusFinished captures enum value "Finished"
	RingOutStatusInfoCalleeStatusFinished string = "Finished"
	// RingOutStatusInfoCalleeStatusInternationalDisabled captures enum value "InternationalDisabled"
	RingOutStatusInfoCalleeStatusInternationalDisabled string = "InternationalDisabled"
	// RingOutStatusInfoCalleeStatusDestinationBlocked captures enum value "DestinationBlocked"
	RingOutStatusInfoCalleeStatusDestinationBlocked string = "DestinationBlocked"
	// RingOutStatusInfoCalleeStatusNotEnoughFunds captures enum value "NotEnoughFunds"
	RingOutStatusInfoCalleeStatusNotEnoughFunds string = "NotEnoughFunds"
	// RingOutStatusInfoCalleeStatusNoSuchUser captures enum value "NoSuchUser"
	RingOutStatusInfoCalleeStatusNoSuchUser string = "NoSuchUser"
)

// prop value enum
func (m *RingOutStatusInfo) validateCalleeStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, ringOutStatusInfoTypeCalleeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *RingOutStatusInfo) validateCalleeStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.CalleeStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateCalleeStatusEnum("calleeStatus", "body", m.CalleeStatus); err != nil {
		return err
	}

	return nil
}

var ringOutStatusInfoTypeCallerStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Invalid","Success","InProgress","Busy","NoAnswer","Rejected","GenericError","Finished","InternationalDisabled","DestinationBlocked","NotEnoughFunds","NoSuchUser"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ringOutStatusInfoTypeCallerStatusPropEnum = append(ringOutStatusInfoTypeCallerStatusPropEnum, v)
	}
}

const (
	// RingOutStatusInfoCallerStatusInvalid captures enum value "Invalid"
	RingOutStatusInfoCallerStatusInvalid string = "Invalid"
	// RingOutStatusInfoCallerStatusSuccess captures enum value "Success"
	RingOutStatusInfoCallerStatusSuccess string = "Success"
	// RingOutStatusInfoCallerStatusInProgress captures enum value "InProgress"
	RingOutStatusInfoCallerStatusInProgress string = "InProgress"
	// RingOutStatusInfoCallerStatusBusy captures enum value "Busy"
	RingOutStatusInfoCallerStatusBusy string = "Busy"
	// RingOutStatusInfoCallerStatusNoAnswer captures enum value "NoAnswer"
	RingOutStatusInfoCallerStatusNoAnswer string = "NoAnswer"
	// RingOutStatusInfoCallerStatusRejected captures enum value "Rejected"
	RingOutStatusInfoCallerStatusRejected string = "Rejected"
	// RingOutStatusInfoCallerStatusGenericError captures enum value "GenericError"
	RingOutStatusInfoCallerStatusGenericError string = "GenericError"
	// RingOutStatusInfoCallerStatusFinished captures enum value "Finished"
	RingOutStatusInfoCallerStatusFinished string = "Finished"
	// RingOutStatusInfoCallerStatusInternationalDisabled captures enum value "InternationalDisabled"
	RingOutStatusInfoCallerStatusInternationalDisabled string = "InternationalDisabled"
	// RingOutStatusInfoCallerStatusDestinationBlocked captures enum value "DestinationBlocked"
	RingOutStatusInfoCallerStatusDestinationBlocked string = "DestinationBlocked"
	// RingOutStatusInfoCallerStatusNotEnoughFunds captures enum value "NotEnoughFunds"
	RingOutStatusInfoCallerStatusNotEnoughFunds string = "NotEnoughFunds"
	// RingOutStatusInfoCallerStatusNoSuchUser captures enum value "NoSuchUser"
	RingOutStatusInfoCallerStatusNoSuchUser string = "NoSuchUser"
)

// prop value enum
func (m *RingOutStatusInfo) validateCallerStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, ringOutStatusInfoTypeCallerStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *RingOutStatusInfo) validateCallerStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.CallerStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateCallerStatusEnum("callerStatus", "body", m.CallerStatus); err != nil {
		return err
	}

	return nil
}
