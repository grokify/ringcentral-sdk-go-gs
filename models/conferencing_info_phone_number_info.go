package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ConferencingInfoPhoneNumberInfo conferencing info phone number info
// swagger:model ConferencingInfo.PhoneNumberInfo
type ConferencingInfoPhoneNumberInfo struct {

	// Information on a home country of a conference phone number
	Country *ConferencingInfoPhoneNumberInfoCountryInfo `json:"country,omitempty"`

	// 'True' if the number is default for the conference. Default conference number is a domestic number that can be set by user (otherwise it is set by the system). Only one default number per country is allowed
	Default bool `json:"default,omitempty"`

	// 'True' if the greeting message is played on this number
	HasGreeting bool `json:"hasGreeting,omitempty"`

	// Location (city, region, state) of a conference phone number
	Location string `json:"location,omitempty"`

	// Dial-in phone number to connect to a conference
	PhoneNumber string `json:"phoneNumber,omitempty"`
}

// Validate validates this conferencing info phone number info
func (m *ConferencingInfoPhoneNumberInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCountry(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ConferencingInfoPhoneNumberInfo) validateCountry(formats strfmt.Registry) error {

	if swag.IsZero(m.Country) { // not required
		return nil
	}

	if m.Country != nil {

		if err := m.Country.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("country")
			}
			return err
		}
	}

	return nil
}
