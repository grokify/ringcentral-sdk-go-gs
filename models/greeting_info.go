package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GreetingInfo greeting info
// swagger:model GreetingInfo
type GreetingInfo struct {

	// Predefined greeting information
	Preset *PresetInfo `json:"preset,omitempty"`

	// Type of a greeting, specifying the case when the greeting is played. See also Greeting Types
	Type string `json:"type,omitempty"`
}

// Validate validates this greeting info
func (m *GreetingInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePreset(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GreetingInfo) validatePreset(formats strfmt.Registry) error {

	if swag.IsZero(m.Preset) { // not required
		return nil
	}

	if m.Preset != nil {

		if err := m.Preset.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("preset")
			}
			return err
		}
	}

	return nil
}

var greetingInfoTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["Introductory","Announcement","ConnectingMessage","ConnectingAudio","Voicemail","Unavailable"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		greetingInfoTypeTypePropEnum = append(greetingInfoTypeTypePropEnum, v)
	}
}

const (
	// GreetingInfoTypeIntroductory captures enum value "Introductory"
	GreetingInfoTypeIntroductory string = "Introductory"
	// GreetingInfoTypeAnnouncement captures enum value "Announcement"
	GreetingInfoTypeAnnouncement string = "Announcement"
	// GreetingInfoTypeConnectingMessage captures enum value "ConnectingMessage"
	GreetingInfoTypeConnectingMessage string = "ConnectingMessage"
	// GreetingInfoTypeConnectingAudio captures enum value "ConnectingAudio"
	GreetingInfoTypeConnectingAudio string = "ConnectingAudio"
	// GreetingInfoTypeVoicemail captures enum value "Voicemail"
	GreetingInfoTypeVoicemail string = "Voicemail"
	// GreetingInfoTypeUnavailable captures enum value "Unavailable"
	GreetingInfoTypeUnavailable string = "Unavailable"
)

// prop value enum
func (m *GreetingInfo) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, greetingInfoTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *GreetingInfo) validateType(formats strfmt.Registry) error {

	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}
